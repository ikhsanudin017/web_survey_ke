// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

// Model untuk Pegawai KSU
model Employee {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  position  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi ke analisa yang dibuat
  financingAnalyses    FinancingAnalysis[]
  
  @@map("employees")
}

// Model untuk Client (Calon Peminjam)
model Client {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  phone     String?
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relasi ke pengajuan pembiayaan
  financingApplications FinancingApplication[]

  @@map("clients")
}

// Model untuk Pengajuan Pembiayaan (diisi oleh Client)
model FinancingApplication {
  id        String   @id @default(cuid())
  clientId  String
  client    Client   @relation(fields: [clientId], references: [id], onDelete: Cascade)

  // Data Pribadi
  fullName           String
  birthPlace         String
  birthDate          DateTime
  gender             String
  maritalStatus      String
  education          String
  occupation         String
  monthlyIncome      Decimal
  spouseName         String?
  spouseOccupation   String?
  spouseIncome       Decimal?

  // Data Kontak
  homeAddress        String
  phoneNumber        String
  contact1           String?
  contact2           String?
  contact3           String?
  contact4           String?
  contact5           String?

  // Data Usaha
  businessName       String?
  businessType       String?
  businessAddress    String?
  businessDuration   Int? // dalam bulan
  businessIncome     Decimal?

  // Data Pembiayaan
  loanAmount         Decimal
  loanPurpose        String
  loanTerm           Int // dalam bulan
  collateral         String?

  // Status
  status             String @default("PENDING") // PENDING, APPROVED, REJECTED
  submittedAt        DateTime @default(now())
  updatedAt          DateTime @updatedAt

  // Relasi
  documents          Document[]
  checklist          ApplicationChecklist?
  financingAnalysis  FinancingAnalysis?
  subFinancingAnalysis SubFinancingAnalysis?
  biChecking         BiChecking?

  @@map("financing_applications")
}

// Model untuk Checklist Data Calon Pembiayaan
model ApplicationChecklist {
  id                    String   @id @default(cuid())
  applicationId         String   @unique
  application           FinancingApplication @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  // Dokumen Identitas
  ktpOriginal           Boolean @default(false)
  ktpCopy               Boolean @default(false)
  kkOriginal            Boolean @default(false)
  kkCopy                Boolean @default(false)

  // Dokumen Penghasilan
  slipGaji              Boolean @default(false)
  suratKeterjaKerja     Boolean @default(false)
  rekKoran              Boolean @default(false)
  buktiPenghasilan      Boolean @default(false)

  // Dokumen Usaha
  siup                  Boolean @default(false)
  tdp                   Boolean @default(false)
  buktiTempatUsaha      Boolean @default(false)
  fotoUsaha             Boolean @default(false)

  // Dokumen Jaminan
  sertifikatTanah       Boolean @default(false)
  bpkb                  Boolean @default(false)
  imb                   Boolean @default(false)

  // Dokumen Lainnya
  suratNikah            Boolean @default(false)
  aktaKelahiran         Boolean @default(false)
  referensiBank         Boolean @default(false)

  notes                 String?
  completedAt           DateTime?
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("application_checklists")
}

// Model untuk Analisa Pembiayaan (diisi oleh Pegawai)
model FinancingAnalysis {
  id                    String   @id @default(cuid())
  applicationId         String?  @unique
  application           FinancingApplication? @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  employeeId            String
  employee              Employee @relation(fields: [employeeId], references: [id])

  // Data dari Application (auto-filled)
  nama                  String?
  alamat                String?
  jenisUsaha            String?
  pengajuan             String?
  jangkaWaktu           String?

  // 1. KARAKTER
  agama                 String?
  pengalaman            String?
  hubMasyarakat         String?
  karakterAngsuranLannya String?
  kelSurveyLannya       String?

  // Rating Karakter (1-5) dengan nama penilai
  karakter1             Int? // Skala 1-5
  karakter1Penilai      String?
  karakter2             Int?
  karakter2Penilai      String?
  karakter3             Int?
  karakter3Penilai      String?
  karakter4             Int?
  karakter4Penilai      String?
  karakter5             Int?
  karakter5Penilai      String?

  // Checklist "Jelek" untuk penilaian
  karakterJelek1        Boolean @default(false)
  karakterJelek2        Boolean @default(false)
  karakterJelek3        Boolean @default(false)
  karakterJelek4        Boolean @default(false)
  karakterJelek5        Boolean @default(false)

  // 2. KESIMPULAN KARAKTER (AI Generated)
  kesimpulanKarakter    String?
  kapasitasDanKelancaran String?

  // 3. ANALISA JAMINAN
  jenisJaminan          String?
  nilaiTaksiran         Decimal?
  kondisiJaminan        String?
  nilaiJaminanSetelahPotongan Decimal?
  validInvalid          String? // "Valid" atau "Invalid"

  // 4. KONDISI
  isKaryawan            Boolean @default(false)
  isWiraswasta          Boolean @default(false)
  isPNSPolri            Boolean @default(false)
  isTetap               Boolean @default(false)
  isKontrak             Boolean @default(false)
  isLainnya             Boolean @default(false)
  masaBerakhirKontrak   String?

  // 5. CAPITAL
  rumah                 String? // "Sendiri" atau "Sewa"
  kendaraanMotor        Int @default(0)
  kendaraanMobil        Int @default(0)
  lainnya               String?

  // 6. CHECKLIST KELENGKAPAN DOKUMEN (Auto-filled from client data)
  fcKtpPemohon          Boolean @default(false)
  fcKtpSuamiIstri       Boolean @default(false)
  fcSlipGaji            Boolean @default(false)

  // 7. KESIMPULAN AKHIR
  kesimpulanAkhir       String @default("Layak") // Layak atau Tidak Layak

  // Signature fields
  petugasSurvei         String?
  pengurus              String?
  approver              String?

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("financing_analyses")
}

// Model untuk Sub Analisa Pembiayaan
model SubFinancingAnalysis {
  id                    String   @id @default(cuid())
  applicationId         String   @unique
  application           FinancingApplication @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  // Pemasukan
  pemasukanSuami        Decimal
  pemasukanIstri        Decimal
  pemasukanLainnya1     Decimal
  pemasukanLainnya2     Decimal

  // Pengeluaran
  pengeluaranSuami      Decimal
  pengeluaranIstri      Decimal
  makan                 Decimal
  listrik               Decimal
  sosial                Decimal
  tanggunganLain        Decimal

  // Anak
  jumlahAnak            Int
  pengeluaranSekolah    Decimal
  uangSaku              Decimal
  
  // Hasil
  pendapatanBersih      Decimal
  jangkaPembiayaan      Int
  angsuranMaksimal      Decimal
  plafonMaksimal        Decimal

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("sub_financing_analyses")
}

// Model untuk BI Checking
model BiChecking {
  id                    String   @id @default(cuid())
  applicationId         String   @unique
  application           FinancingApplication @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  // PDF Upload
  pdfFileName           String
  pdfFileUrl            String
  pdfFileSize           Int

  // AI Analysis Results
  aiAnalysisResult      Json? // Store AI analysis results as JSON
  creditScore           Int?
  riskLevel             String? // LOW, MEDIUM, HIGH
  recommendation        String? // LAYAK, TIDAK_LAYAK
  aiSummary            String? // AI generated summary

  // Manual Input Fields
  manualNotes          String?
  manualRating         Int? // 1-10

  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt

  @@map("bi_checking")
}

// Model untuk Dokumen
model Document {
  id                    String   @id @default(cuid())
  applicationId         String
  application           FinancingApplication @relation(fields: [applicationId], references: [id], onDelete: Cascade)

  fileName              String
  originalName          String
  fileType              String
  fileSize              Int
  fileUrl               String
  category              String // KTP, KK, SLIP_GAJI, etc.

  uploadedAt            DateTime @default(now())

  @@map("documents")
}

// Model untuk Session NextAuth
model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}