
                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\employee\dashboard\page.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\employee\login\page.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\employee\sub-analysis\new\page.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\enhanced-analysis\page.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\layout.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\app\page.ts
   7:30   error    Prefer using the primitive `object` as a type name, rather than the upper-cased `Object`


                 @typescript-eslint/no-wrapper-object-types
   7:39   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
   7:71   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  13:12   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  14:12   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  24:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  25:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  26:14   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  27:22   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  51:72   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  51:88   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  56:26   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  66:51   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:37   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  69:42   warning  '_M' is defined but never used


                 @typescript-eslint/no-unused-vars
  70:84   error    The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  72:15   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  72:25   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  72:67   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:76   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  72:102  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:16   warning  'T' is defined but never used


                 @typescript-eslint/no-unused-vars
  73:26   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  73:59   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:77   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  73:103  error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any
  74:84   error    The `Function` type accepts any function-like value.
Prefer explicitly defining any function parameters and return type

                                                                        @typescript-eslint/no-unsafe-function-type
  78:22   warning  '_' is defined but never used


                 @typescript-eslint/no-unused-vars
  78:46   error    Unexpected any. Specify a different type


                 @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\.next\types\routes.d.ts
  14:8   error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  15:20  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  16:24  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  19:32  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  20:34  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  21:23  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  22:43  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  23:31  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  24:29  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  25:32  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  26:36  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  27:30  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  28:33  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  29:29  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  30:40  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  31:18  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  32:21  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  33:19  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  34:30  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  35:39  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  36:29  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  39:26  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  40:22  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  41:33  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type
  42:25  error  The `{}` ("empty object") type allows any non-nullish value, including literals like `0` and `""`.
- If that's what you want, disable this lint rule with an inline comment or configure the 'allowObjectTypes' rule option.      
- If you want a type meaning "any object", you probably want `object` instead.
- If you want a type meaning "any value", you probably want `unknown` instead  @typescript-eslint/no-empty-object-type

D:\PROJECT\web_survey_ksuke\.next\types\validator.ts
  10:71   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  10:126  error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  11:74   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  11:83   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  13:51   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  15:16   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  15:23   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  17:51   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  19:16   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  19:23   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  20:14   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  21:14   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  26:74   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  26:83   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  28:51   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  30:16   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  30:23   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  32:51   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  34:16   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  34:23   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  35:14   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any
  36:14   error  Unexpected any. Specify a different type  @typescript-eslint/no-explicit-any

D:\PROJECT\web_survey_ksuke\next-env.d.ts
  3:1  error  Do not use a triple slash reference for ./.next/types/routes.d.ts, use `import` style instead  @typescript-eslint/triple-slash-reference

D:\PROJECT\web_survey_ksuke\src\app\api\applications\[id]\route.ts
  60:13  warning  'uploadedFiles' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\app\api\auth\[...nextauth]\route.ts
  1:10  warning  'NextRequest' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\app\api\employee\analysis\route.ts
  39:11  warning  'analysisResult' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\app\api\enhanced-analysis\ai-analyze\route.ts
   34:11  warning  'context' is assigned a value but never used  @typescript-eslint/no-unused-vars
  108:9   warning  'prompt' is assigned a value but never used   @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\app\employee\analysis\new\page.tsx
  151:15  warning  'hasKK' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\app\employee\applications\[id]\edit\page.tsx
  101:6  warning  React Hook useEffect has a missing dependency: 'fetchApplicationData'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

D:\PROJECT\web_survey_ksuke\src\app\employee\dashboard\page.tsx
  203:15  warning  Using `<img>` could result in slower LCP and higher bandwidth. Consider using `<Image />` from `next/image` 
or a custom image loader to automatically optimize images. This may incur additional usage or cost from your provider. See: https://nextjs.org/docs/messages/no-img-element  @next/next/no-img-element

D:\PROJECT\web_survey_ksuke\src\app\employee\sub-analysis\new\page.tsx
  111:6  warning  React Hook useEffect has a missing dependency: 'calculatePendapatanBersih'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

D:\PROJECT\web_survey_ksuke\src\app\enhanced-analysis\page.tsx
  31:10  warning  'isLoading' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\ApplicationForm.tsx
   34:10  warning  'savedData' is assigned a value but never used  @typescript-eslint/no-unused-vars
  110:14  warning  'error' is defined but never used               @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\EnhancedForm.tsx
    5:33  warning  'UseFormReturn' is defined but never used               @typescript-eslint/no-unused-vars
   15:34  warning  'T' is defined but never used                           @typescript-eslint/no-unused-vars
   63:10  warning  'currentSection' is assigned a value but never used     @typescript-eslint/no-unused-vars
   63:26  warning  'setCurrentSection' is assigned a value but never used  @typescript-eslint/no-unused-vars
   74:73  warning  'reset' is assigned a value but never used              @typescript-eslint/no-unused-vars
   99:16  warning  'error' is defined but never used                       @typescript-eslint/no-unused-vars
  126:18  warning  'index' is defined but never used                       @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\ProgressIndicator.tsx
   6:10  warning  'useRouter' is defined but never used                  @typescript-eslint/no-unused-vars
  30:9   warning  'currentStepIndex' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\application\FormActions.tsx
  13:3  warning  'currentStep' is defined but never used   @typescript-eslint/no-unused-vars
  14:3  warning  'totalSteps' is defined but never used    @typescript-eslint/no-unused-vars
  15:3  warning  'onNext' is defined but never used        @typescript-eslint/no-unused-vars
  16:3  warning  'onPrevious' is defined but never used    @typescript-eslint/no-unused-vars
  17:3  warning  'isSubmitting' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\application\FormProgress.tsx
  9:40  warning  'steps' is defined but never used        @typescript-eslint/no-unused-vars
  9:47  warning  'currentStep' is defined but never used  @typescript-eslint/no-unused-vars
  9:60  warning  'onStepClick' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\enhanced-form\EnhancedFormContainer.tsx
    3:20  warning  'useEffect' is defined but never used             @typescript-eslint/no-unused-vars
   26:10  warning  'currentStep' is assigned a value but never used  @typescript-eslint/no-unused-vars
  141:14  warning  'error' is defined but never used                 @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\enhanced-form\FormActions.tsx
  44:16  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  63:16  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  96:18  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\financing-analysis\FinancingAnalysisForm.tsx
   89:16  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars
  127:14  warning  'error' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\components\ui\calendar.tsx
  4:10  warning  'ChevronLeft' is defined but never used   @typescript-eslint/no-unused-vars
  4:23  warning  'ChevronRight' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\hooks\use-toast.ts
  18:7  warning  'actionTypes' is assigned a value but only used as a type  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\hooks\useAsyncValidation.ts
  96:6  warning  React Hook useEffect has a missing dependency: 'validateAsync'. Either include it or remove the dependency array  react-hooks/exhaustive-deps

D:\PROJECT\web_survey_ksuke\src\hooks\useDebouncedValidation.ts
  27:9   warning  'validationRef' is assigned a value but never used                                                          @typescript-eslint/no-unused-vars
  31:31  warning  React Hook useCallback received a function whose dependencies are unknown. Pass an inline function instead  react-hooks/exhaustive-deps

D:\PROJECT\web_survey_ksuke\src\hooks\useEnhancedForm.ts
  111:6  warning  React Hook useCallback has a missing dependency: 'asyncValidation'. Either include it or remove the dependency array  react-hooks/exhaustive-deps
  129:6  warning  React Hook useEffect has a missing dependency: 'validationState'. Either include it or remove the dependency 
array    react-hooks/exhaustive-deps
  138:6  warning  React Hook useEffect has a missing dependency: 'formProgress'. Either include it or remove the dependency array       react-hooks/exhaustive-deps

D:\PROJECT\web_survey_ksuke\src\hooks\useValidationState.ts
  29:5  warning  'validateOnSubmit' is assigned a value but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\lib\api\enhanced-analysis.ts
  9:3  warning  'AnalysisWebhookPayload' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\lib\auth.ts
  1:1  warning  Unused eslint-disable directive (no problems were reported from '@typescript-eslint/no-explicit-any')

D:\PROJECT\web_survey_ksuke\src\lib\validation-enhanced.ts
  1:10  warning  'z' is defined but never used  @typescript-eslint/no-unused-vars

D:\PROJECT\web_survey_ksuke\src\lib\validations\unified-enhanced-analysis.ts
  4:10  warning  'CharacterAssessmentValidationSchema' is defined but never used  @typescript-eslint/no-unused-vars
  5:10  warning  'BatchDocumentAnalysisSchema' is defined but never used          @typescript-eslint/no-unused-vars
  6:10  warning  'CollateralAnalysisSchema' is defined but never used             @typescript-eslint/no-unused-vars
  7:10  warning  'FinancialCapacitySchema' is defined but never used              @typescript-eslint/no-unused-vars
  8:10  warning  'AIConclusionSchema' is defined but never used                   @typescript-eslint/no-unused-vars
  9:10  warning  'FinalDecisionSchema' is defined but never used                  @typescript-eslint/no-unused-vars

✖ 12929 problems (1368 errors, 11561 warnings)
  30 errors and 1 warning potentially fixable with the `--fix` option.errror ini fix it